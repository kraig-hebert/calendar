import { createUseStyles } from 'react-jss';

export const useStyles = createUseStyles({
  '@keyframes fadeIn': {
    from: { opacity: '0', zIndex: '-1' },
    to: { opacity: '1', zIndex: '2' },
  },
  '@keyframes fadeOut': {
    from: { opacity: '1', zIndex: '2' },
    to: { opacity: '0', zIndex: '-1' },
  },
  '@keyframes dateMoveIn': {
    from: { opacity: '0', zIndex: '-1' },
    to: { opacity: '1', zIndex: '2' },
  },
  '@keyframes dateMoveOut': {
    from: { opacity: '1', zIndex: '2' },
    to: { opacity: '0', zIndex: '-1' },
  },
  '@keyframes dateTimeMoveIn': {
    from: { opacity: '0', zIndex: '-1' },
    to: { opacity: '1', zIndex: '2' },
  },
  '@keyframes dateTimeMoveOut': {
    from: { opacity: '1', zIndex: '2' },
    to: { opacity: '0', zIndex: '-1' },
  },
  modal: (props) => ({
    display: 'flex',
    position: 'absolute',
    left: '0',
    top: '0',
    width: '100%',
    height: '100%',
    backgroundColor: 'rgba(0,0,0,0.2)',
    zIndex: props.modal.zIndex,
    opacity: props.modal.opacity,
    animationName: props.modal.animation,
    animationDuration: '.5s',
  }),
  modalContent: (props) => ({
    backgroundColor: '#fff',
    margin: 'auto',
    width: '30%',
    border: '1px solid rgb(7,82,18)',
    borderRadius: '20px',
    opacity: props.modal.opacity,
    animationName: props.modal.animation,
    animationDuration: '.5s',
    display: 'flex',
    flexDirection: 'column',
    alignItems: 'center',
  }),
  iconContainer: {
    display: 'flex',
    justifyContent: 'space-between',
    backgroundColor: 'rgb(120,255,140)',
    width: '100%',
    borderTopRightRadius: '20px',
    borderTopLeftRadius: '20px',
    borderBottom: '1px solid rgb(7,82,18)',
  },
  icon: {
    cursor: 'pointer',
    fontSize: '2rem',
    color: 'rgb(7,82,18)',
    margin: '10px',
  },
  titleInput: {
    marginTop: '25px',
    padding: '5px 10px',
    border: '1px solid rgb(7,82,18)',
    borderRadius: '10px',
    width: '60%',
    height: '35px',
    fontSize: '1.75rem',
    '&:active, &:focus': {
      outline: 'none',
    },
    '&::placeholder': {
      paddingLeft: '10px',
      color: 'rgb(7,82,18)',
    },
  },
  timeContainer: {
    display: 'flex',
    alignItems: 'center',
    justifyContent: 'center',
    width: '100%',
    height: '100px',
    padding: '15px 0',
    position: 'relative',
  },
  dateContainer: (props) => ({
    position: 'absolute',
    width: '100%',
    animationName: props.dateInputs.dateContainer.animation,
    animationDuration: '.5s',
    zIndex: props.dateInputs.dateContainer.zIndex,
    opacity: props.dateInputs.dateContainer.opacity,
  }),
  dateTimeContainer: (props) => ({
    position: 'absolute',
    display: 'flex',
    width: '100%',
    animationName: props.dateInputs.dateTimeContainer.animation,
    animationDuration: '.5s',
    zIndex: props.dateInputs.dateTimeContainer.zIndex,
    opacity: props.dateInputs.dateTimeContainer.opacity,
  }),
  dateInputContainer: {
    display: 'flex',
    flexDirection: 'column',
    alignItems: 'center',
    justifyContent: 'center',
    width: '100%',
    '& p': {
      color: 'rgb(7,82,18)',
    },
  },
  dateInput: {
    margin: '10px 0',
    padding: '5px',
    border: '1px solid rgb(7,82,18)',
    borderRadius: '10px',
    width: '50%',
    height: '35px',
    fontSize: '1.25rem',
    '&::-webkit-calendar-picker-indicator': {
      // filter: 'invert(1)',
      cursor: 'pointer',
    },
    '&:active, &:focus': {
      outline: 'none',
    },
  },
  dateTimeInput: {
    margin: '10px 0',
    padding: '5px',
    border: '1px solid rgb(7,82,18)',
    borderRadius: '10px',
    width: '85%',
    height: '35px',
    fontSize: '1.25rem',
    '&::-webkit-calendar-picker-indicator': {
      // filter: 'invert(1)',
      cursor: 'pointer',
    },
    '&:active, &:focus': {
      outline: 'none',
    },
  },
});
