import { createUseStyles } from 'react-jss';

export const useStyles = createUseStyles((theme) => ({
  '@keyframes revealDrawer': {
    '0%': { width: '50px', height: '100px' },
    '50%': { width: '50px', height: '250px' },
    '100%': { width: '200px', height: '250px' },
  },
  '@keyframes hideDrawer': {
    '0%': { width: '200px', height: '250px' },
    '50%': { width: '50px', height: '250px' },
    '100%': { width: '50px', height: '100px' },
  },
  '@keyframes revealButton': {
    '0%': { width: '0px' },
    '50%': { width: '0px' },
    '100%': { width: '30px' },
  },
  '@keyframes hideButton': {
    '0%': { width: '30px' },
    '50%': { width: '0px' },
    '100%': { width: '0px' },
  },
  drawerContainer: (props) => ({
    position: 'absolute',
    width: props.drawerProps.width,
    height: props.drawerProps.height,
    left: '100%',
    top: '55%',
    transform: 'translateY(-50%)',
    animationName: props.drawerProps.animationName,
    animationDuration: '.75s',
    overflow: 'hidden',
    borderTopRightRadius: '10px',
    borderBottomRightRadius: '10px',
  }),
  drawerContent: (props) => ({
    position: 'relative',
    display: 'flex',
    flexDirection: 'column',
    justifyContent: 'center',
    alignItems: 'center',
    height: props.drawerProps.height,
    width: props.drawerProps.width,
    animationName: props.drawerProps.animationName,
    animationDuration: '.75s',
    backgroundColor: theme.light.main,
    borderLeft: `1px solid ${theme.primary.main}`,
    borderTopRightRadius: '10px',
    borderBottomRightRadius: '10px',
  }),
  icon: {
    position: 'absolute',
    right: '5px',
    top: '5px',
    color: theme.primary.main,
    fontSize: '1.25rem',
    cursor: 'pointer',
  },
  button: (props) => ({
    position: 'absolute',
    display: 'flex',
    justifyContent: 'center',
    alignItems: 'center',
    height: '75px',
    width: props.buttonProps.width,
    backgroundColor: theme.primary.main,
    color: theme.light.main,
    fontSize: '.75rem',
    borderRadius: '5px',
    cursor: 'pointer',
    animationName: props.buttonProps.animationName,
    animationDuration: '.75s',
    left: '10%',
    overflow: 'hidden',
    '& p': {
      transform: 'rotate(90deg)',
    },
  }),
}));
